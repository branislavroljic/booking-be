name: booking-be workflow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/accomodation

on:
  push:
    branches:
      - main
      - develop
      - master

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17" # Update to match your Java version
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Dependencies and Build
        run: mvn clean install -DskipTests

      - name: Run Unit Tests
        run: mvn test

      - name: Package Application
        run: mvn package -DskipTests

  push-to-ghcr:
    runs-on: ubuntu-latest
    environment:
      name: booking-be-env

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semantic Release
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          working_directory: .
        env:
          GH_TOKEN: ${{ secrets.BOOKING_FE_TOKEN }}
          DEBUG: "semantic-release:*"

      - name: Log into ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BOOKING_FE_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{steps.semantic_release.outputs.new_release_version}}

      - name : kaniko
        uses: int128/kaniko-action@v1
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ghcr.io/${{ github.repository }}/cache
